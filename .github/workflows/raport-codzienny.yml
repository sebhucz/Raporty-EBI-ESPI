# Nazwa naszego automatycznego zadania
name: Codzienna Aktualizacja Strony

# Kiedy zadanie ma się uruchamiać?
on:
  schedule:
    # Uruchom codziennie o 7:00 rano UTC (9:00 czasu polskiego letniego)
    - cron:  '0 7 * * *'
  # Pozwala też na ręczne uruchomienie z panelu Actions
  workflow_dispatch:

# Definicja zadań do wykonania
jobs:
  build-and-deploy:
    # Uruchom na najnowszej wirtualnej maszynie z systemem Linux
    runs-on: ubuntu-latest

    # Kroki, które robot ma wykonać po kolei
    steps:
      # Krok 1: Pobierz kod z naszego repozytorium do wirtualnej maszyny
      - name: Pobieranie kodu
        uses: actions/checkout@v4

      # Krok 2: Zainstaluj środowisko Python
      - name: Ustawienie Pythona
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # Krok 3: Zainstaluj potrzebne biblioteki
      - name: Instalacja bibliotek
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4
      
      # Krok 4: Uruchom nasz główny skrypt, który wygeneruje plik index.html
      - name: Uruchomienie skryptu agenta
        run: python agent_page.py
      
      # Krok 5: Prześlij wygenerowaną stronę (artefakt) do GitHub Pages
      - name: Wdrożenie na GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: . # Prześlij zawartość całego bieżącego folderu

  # Definicja środowiska wdrożenia
  deploy:
    # Potrzebuje zadania 'build-and-deploy', aby się zakończyło
    needs: build-and-deploy
    
    # Daj robotowi uprawnienia do zapisu na stronie (TUTAJ BYŁ BŁĄD)
    permissions:
      pages: write
      id-token: write
      
    # Określ środowisko
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
      
    # Uruchom na maszynie ubuntu
    runs-on: ubuntu-latest
    
    steps:
      # Opublikuj artefakt na stronie
      - name: Publikacja na GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
